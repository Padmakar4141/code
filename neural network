import pandas as pd
import numpy as np


df = pd.read_csv('Churn_Modelling.csv')

df.head(3)

df.isnull().sum()

df.plot(kind='box',figsize=(20,20), layout=(7,2), subplots=True)

def remove_outliers(df, col):
    Q1 = df[col].quantile(0.25)
    Q3 = df[col].quantile(0.75)
    IQR = Q3-Q1
    lower = Q1 - 1.5*IQR
    upper = Q3 + 1.5*IQR
    df[col] = np.clip(df[col], lower, upper)
    return df[col]

df['Age'] = remove_outliers(df, "Age")
df['CreditScore'] = remove_outliers(df, 'CreditScore')
df['NumOfProducts'] = remove_outliers(df, 'NumOfProducts')
df['Exited'] = remove_outliers(df, 'Exited')

df.plot(kind='box',figsize=(20,20), layout=(7,2), subplots=True)

df.dtypes

from sklearn.preprocessing import OneHotEncoder, LabelEncoder

LabelEnc = LabelEncoder()

gender = df['Gender']

gender = LabelEnc.fit_transform(gender)

df = pd.get_dummies(df, columns=['Geography'])

df['Gender'] = gender

df.head()

df.drop(['RowNumber','CustomerId','Surname'],inplace=True,axis=1)

df.head()

corrs = df.corr()

corrs

df.head(3)

X = df.drop('Exited',axis=1)
y = df['Exited']

from sklearn.preprocessing import StandardScaler,MinMaxScaler
from sklearn.model_selection import train_test_split

scaler = StandardScaler()
scaler_alt = MinMaxScaler()

X[['CreditScore','Age','Tenure','Balance','NumOfProducts','EstimatedSalary']] = scaler_alt.fit_transform(X[['CreditScore','Age','Tenure','Balance','NumOfProducts','EstimatedSalary']])

X

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=5)

import tensorflow as tf
from tensorflow import keras

model = keras.Sequential([
    keras.layers.Dense(9,input_shape=(12,),activation='relu'),
    keras.layers.Dense(12,activation='relu'),
    keras.layers.Dense(1,activation='sigmoid')
])

X.shape

model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])
model.fit(X_train,y_train,epochs=100)

